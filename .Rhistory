swirl()
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- as.POSIXlt(Sys.time())
class(t2)
l2
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t2 <-  "October 17, 1986 08:24"
t2 <-  '"October 17, 1986 08:24"'
t2 <- "October 17, 1986 08:24"
t3 <- "October 17, 1986 08:24"
strptime(t3, "%B %d, %Y %H:%M")
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
diftime(Sys.time(), t1, units = 'days')
difftime(Sys.time(), t1, units = 'days')
0
f <- function(x){}
f <- function(x){ g <- function(y){y + z} z <- 4 x + g(x)}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
f(3)
z <- 10
f(3)
swirl()
library(swirl)
swirl()
install_from_swirl("Exploratory Data Analysis")
swirl()
quit
install_from_swirl("Exploratory Data Analysis")
library(swirl)
install_from_swirl("Exploratory Data Analysis")
swirl()
quit
exit
d
asdf
asdf
asdf
adsffdas
q
q
q
bye()
swirl()
bye()
swirl()
head(pollution)
dim(pollution)
summary(pollution)
summary(pollution$pm25)
quantile(ppm)
boxplot(ppm)
boxplot(ppm, col = "blue")
abline()
abline(h = 12)
hist(ppm)
hist(ppm, col = "green")
rug(ppm)
rug(high)
low
high
hist(ppm, col="green")
hist(ppm, col="green", breaks = 100)
rug(ppm)
hist(ppm, col="green")
abline(v=12)
abline(v=12, lwd=2)
abline(v=12, lwd=4)
abline(v = median(ppm),col = "magenta", lwd=4)
name(ppm)
names(ppm)
names(pollution)
table(pollution$region)
reg <- table(pollution$region)
reg
barplot(reg, col = "wheat")
barplot(reg, col = "wheat", main = "Number of Counties in Each Region")
d
boxplot(pm25~region)
boxplot(pollution$pm25~pollution$region)
boxplot(pm25 ~ region, data = pollution, col = "red")
par(mfrow=c(2,1),mar=c(4,4,2,1))
subset(pollution, region = "east")
subset(pollution, region == "east")
east <- subset(pollution, region == "east")
heat(east)
head(east)
hist(east)
hist(east$pm25)
hist(east$pm25, col = "green")
hist(subset(pollution, region="west")$pm25, col = "green")
hist(subset(pollution, region=="west")$pm25, col = "green")
plot(pollution)
plot(pollution, plot(latitude, pm25))
with(pollution, plot(latitude, pm25))
abline(h=12)
abline(h=12, lwd=2, lty=2)
plot(pollution)
plot(pollution$latitude, ppm, col = pollution$region)
abline(h=12, lwd=2, lty=2)
par(mfrow = c(1, 2), mar = c(5, 4, 2, 1))
west <- subset(pollution, region == "west")
plog(west)
plot(west)
plot(west$latitude, west$pm25, main = "West")
plot(west$latitude, east$pm25, main = "east")
plot(east$latitude, east$pm25, main = "east")
plot(east$latitude, east$pm25, main = "East")
?Devices
plot(faithful)
with(faithful, plot(eruptions, waiting))
with(faithful, plot(eruptions, waiting, main = "Old Faithful Geyser data"))
title(main = "Old Faithful Geyser data")
dev.cur()
pdf(file="myplot.pdf")
with(faithful, plot(eruptions, waiting, main = "Old Faithful Geyser data"))
with(faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.cur()
def.off()
dev.off()
dev.cur()
with(faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.copy(png, geyserplot.png)
dev.copy(png, "geyserplot.png")
dev.copy(png, file = "geyserplot.png")
dev.close()
dev.off()
head(cars)
with(cars, plot(speed, dist))
text(mean(cars$speed), max(cars$dist), "SWIRL rules!")
head(states)
head(state)
table(state$region)
xyplot(Life.Exp ~ Income | region, data, "d")
xyplot(Life.Exp ~ Income , data, "d")
xyplot(Life.Exp ~ Income , state, "d")
with(state, xyplot(Life.Exp , Murder, "d")
d
with(state, xyplot(Life.Exp , Murder)
)
3+3
xyplot(Life.Exp ~ Income | region, data = state, layout = c(4, 1))
xyplot(Life.Exp ~ Income | region, data = state, layout = c(2,2))
head(mpg)
dim(mpg)
table(mpg$model)
2+2
qplot(displ, hwy, data = mpg)
qplot(displ, hwy, data = mpg)
qplot
qplot(displ, hwy, data = mpg)
2+2
qplot(displ, hwy, data = mpg)
install.packages("labeling")
qplot(displ, hwy, data = mpg)
head(airquality)
range(airquality$ozone, ra.rm)
2+2
range(airquality$Ozone,na.rm=TRUE)
hist(airquality$ozone)
hist(airquality$ozone)
2+2
hist(airquality$Ozone)
dev.off()
table(airquality$Month)
2
boxplot(Ozone~Month, airquality)
boxplot(Ozone~Month, airquality, xlab="Month", ylab="Ozone (ppb)", col.axis="blue", col.lab = "red")
title("Onaone and Wind in New York City")
title(main="Ozone and Wind in New York City")
2
with(airquality, plot(Wind, Ozone))
title(main="Ozone and Wind in New York City")
par()
length(par())
names(par())
par()$pin
par("fg")
par("pch")
par("lty")
2
plot(airquality$Wind, type="n",airquality$Ozone)
title(main="Wind and Ozone in NYC")
2
may <- subset(airquality, Month==5)
2
points(may$Wind,may$Ozone,col="blue",pch=17)
1
notmay <- subset(airquality, Month!=5)
2
points(notmay$Wind,notmay$Ozone,col="red",pch=8)
2
legend("topright",pch=c(17,8),col=c("blue","red"),legend=c("May","Other Months"))
2
abline(v=median(airquality$Wind),lty=2,lwd=2)
2
par(mfrow=c(1,2))
2
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
2
plot(airquality$Ozone, airquality$Solar.R, main = "Ozone and Solar Radiation")
par(mfrow = c(1, 3), mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
2
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
2
plot(airquality$Solar.R, airquality$Ozone, main = "Ozone and Solar Radiation")
2
plot(airquality$Temp, airquality$Ozone, main = "Ozone and Temperature")
2
mtext("Ozone and Weather in New York City", outer = TRUE)
setwd("C:\Users\David\Documents\GitHub\ExData_Plotting1\figure")
setwd("C:\\Users\\David\\Documents\\GitHub\\ExData_Plotting1\\figure")
ls()
dir()
if(!file.exists("household_power_consumption.zip"))
{
download.file("https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip","household_power_consumption.zip", mode="wb")
}
data <- read.table(unz("household_power_consumption.zip", "household_power_consumption.txt"), sep=",")
dim(data)
head(data)
data <- read.table(unz("household_power_consumption.zip", "household_power_consumption.txt"), sep=";")
head(data)
if(!file.exists("household_power_consumption.zip"))
{
download.file("https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip","household_power_consumption.zip", mode="wb")
}
# Don't recreate data object
if(!exists(data))
{
data <- read.table(unz("household_power_consumption.zip", "household_power_consumption.txt"), sep=";")
}
# Don't recreate data object
if(!exists("data"))
{
data <- read.table(unz("household_power_consumption.zip", "household_power_consumption.txt"), sep=";")
}
# Don't recreate data object
if(!exists("data"))
{
data <- read.table(unz("household_power_consumption.zip", "household_power_consumption.txt"), sep=";")
}
subset(data, as.Date(data$Time) > 2007-02-01)
subset(data, as.Date(data$Time) > '2007-02-01')
data$Time
head(data)
data$Date
data$V1
data <- read.table(unz("household_power_consumption.zip", "household_power_consumption.txt"), sep=";", header=true)
data <- read.table(unz("household_power_consumption.zip", "household_power_consumption.txt"), sep=";", header=TRUE)
head(data)
data$Date
as.Date(data$Date)
data <- read.table(unz("household_power_consumption.zip", "household_power_consumption.txt"), sep=";", header=TRUE)
data$Date <- as.Date(data$Date, format="%Y-%m-%d")
head(data)
??format
data <- read.table(unz("household_power_consumption.zip", "household_power_consumption.txt"), sep=";", header=TRUE)
head(data)
data$Date <- as.Date(data$Date, format="%d/%m/%Y")
head(date)
head(data)
date$Time <- strptime(date$Time)
head(data$time)
head(data$Time)
t <- strptime(date$Time)
data <- read.table(unz("household_power_consumption.zip", "household_power_consumption.txt"), sep=";", header=TRUE)
head(data)
within(data, { timestamp=format(as.POSIXct(paste(Date, Time)), "%d/%m/%Y %H:%M:%S") })
head(data)
head(data)
data <- within(data, { timestamp=format(as.POSIXct(paste(Date, Time)), "%d/%m/%Y %H:%M:%S") })
head(data)
data <- read.table(unz("household_power_consumption.zip", "household_power_consumption.txt"), sep=";", header=TRUE)
head(data)
data <- within(data, { datetime= strptime(paste(Date, Time), "%d/%m/%Y %H:%M:%S") })
head(data)
subset(data, data$datetime >= 2007-02-01)
power <- subset(data, data$datetime >= 2007-02-01 && data$datetime <= 2007-02-02)
head(power)
dim(power)
powr
power
power <- subset(data, data$datetime >= 2007-02-01)
power <- subset(data, data$datetime >= 2007-02-01 & data$datetime <= 2007-02-02)
head(power)
power <- subset(data, data$datetime >= 2007-02-01)
head(power)
dim(power)
power2 <- subset(data, data$datetime >= data$datetime <= 2007-02-02)
power2 <- subset(data, data$datetime <= 2007-02-02)
head(power2)
power2 <- subset(data, data$datetime >= data$datetime <= "2007-02-02")
power2 <- subset(data, data$datetime <= "2007-02-02")
head(power)
power <- subset(data, data$datetime >= "2007-02-01" & data$datetime <= "2007-02-02")
head(power)
power <- subset(data, data$datetime <= "2007-02-02")
head(power)
dim(power)
dim(data)
power <- subset(power, power$datetime >= "2007-02-01")
dim(power)
power1 <- subset(data, data$datetime >= "2007-02-01")
power2 <- subset(data, data$datetime <= "2007-02-02")
dim(power1)
dim(power2)
dim(power)
dim(data)
tail(dat)
tail(data)
head(data)
power1 <- subset(data, data$datetime == "2007-02-01")
power1
power1 <- subset(data, data$datetime == "2007-02-02")
power1
power1 <- subset(data, data$Date == "02/02/2007")
dim(power1)
power1
head(data$Date)
power1 <- subset(data, data$Date == "16/12/2006")
power
power1
data
q
data$Date
power1 <- subset(data, data$Date == "2/2/2007")
power1
power <- subset(data, data$Date == "1/2/2007" | data$Date == "2/2/2007" )
power
names(power)
hist(power$Global_active_power)
head(power)
power$Global_intensity <- as.Numeric(power$Global_intensity)
class(power$Global_intensity)
power$Global_intensity <- as.numeric(power$Global_intensity)
class(power$Global_intensity)
hist(power$Global_active_power)
class(power$Global_intensity)
hist(power$Global_active_power)
power$Global_active_power <- as.numeric(power$Global_active_power)
hist(power$Global_active_power)
hist(power$Global_active_power, col = "red)
)
hist(power$Global_active_power, col = "red)
hist(power$Global_active_power, col = "red")
hist(power$Global_active_power, col = "red", xlab="hello")
hist(power$Global_active_power, col = "red", xlab="Global Active Power (kilowatts", main="Global Active Power")
hist(power$Global_active_power/1000, col = "red", xlab="Global Active Power (kilowatts", main="Global Active Power")
hist(power$Global_active_power/1000, col = "red", xlab="Global Active Power (kilowatts)", main="Global Active Power")
png("plot1.pdf", width=480, height=480)
dir()
png("plot1.png", width=480, height=480)
dir()
getwd()
dir()
source('~/GitHub/ExData_Plotting1/plot1.R')
setwd("C:\\Users\\David\\Documents\\GitHub\\ExData_Plotting1")
dir()
source('~/GitHub/ExData_Plotting1/plot1.R')
dir()
dev.off()
source('~/GitHub/ExData_Plotting1/plot1.R')
hist(power$Global_active_power/1000, col = "red", xlab="Global Active Power (kilowatts)", main="Global Active Power")
dev.copy(png, "plot1.png", width=480, height=480)
dev.off()
source('~/GitHub/ExData_Plotting1/plot1.R')
source('~/GitHub/ExData_Plotting1/plot1.R')
plot(power$Global_active_power, power$datetime)
lines(power$Global_active_power, power$datetime)
plot(power$datetime, power$Global_active_power)
lines(power$datetime, power$Global_active_power)
plot(t="n")
lines(power$datetime, power$Global_active_power)
plot(type="n")
lines(power$datetime, power$Global_active_power)
plot(type="n")
lines(power$datetime, power$Global_active_power)
plot(power$datetime, power$Global_active_power, type="n")
lines(power$datetime, power$Global_active_power)
plot(power$datetime, power$Global_active_power, type="n")
plot(power$datetime, power$Global_active_power, type="n")
lines(power$datetime, power$Global_active_power)
source('~/GitHub/ExData_Plotting1/plot2.R')
plot(power$datetime, power$Global_active_power/1000, type="n", ylab="Global Active Power(kilowatts")
lines(power$datetime, power$Global_active_power)
plot(power$datetime, power$Global_active_power/1000, type="n")
lines(power$datetime, power$Global_active_power)
plot(power$datetime, power$Global_active_power, type="n")
lines(power$datetime, power$Global_active_power)
plot(power$datetime, power$Global_active_power/1000, type="n")
lines(power$datetime, power$Global_active_power/1000)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/GitHub/ExData_Plotting1/plot2.R')
source('~/GitHub/ExData_Plotting1/plot2.R')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/GitHub/ExData_Plotting1/plot2.R')
head(power)
source('~/GitHub/ExData_Plotting1/plot3.R')
source('~/GitHub/ExData_Plotting1/plot3.R')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/GitHub/ExData_Plotting1/plot3.R')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
head(power)
class(power$Sub_metering_3)
class(power$Sub_metering_2)
class(power$Sub_metering_1)
power$Sub_metering_1 <- as.numeric(power$Sub_metering_1)
power$Sub_metering_2 <- as.numeric(power$Sub_metering_2)
power$Sub_metering_3 <- as.numeric(power$Sub_metering_3)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
summary(power$Sub_metering_3)
summary(power$Sub_metering_2)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/GitHub/ExData_Plotting1/plot3.R')
source('~/GitHub/ExData_Plotting1/plot3.R')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/GitHub/ExData_Plotting1/plot3.R')
source('~/GitHub/ExData_Plotting1/plot3.R')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
summary(power$Sub_metering_2)
summary(power$Sub_metering_3)
summary(power$Sub_metering_2)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
View(data)
source('~/GitHub/ExData_Plotting1/plot3.R')
